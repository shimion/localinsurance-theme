<?php

/**

 * The template for displaying the footer.

 *

 * -------------------------------------------------------------------

 *

 * DESCRIPTION:

 *

 * This file used to call almost all other PHP scripts and libraries needed.

 * The file contains some of the primary functions to set main theme settings.

 * All bundled plugins are also called from here using TGMPA class.

 *

 * @package    SEOWP WordPress Theme

 * @author     Vlad Mitkovsky <info@lumbermandesigns.com>

 * @copyright  2014 Lumberman Designs

 * @license    http://themeforest.net/licenses

 * @link       http://themeforest.net/user/lumbermandesigns

 *

 * -------------------------------------------------------------------

 *

 * Send your ideas on code improvement or new hook requests using

 * contact form on http://themeforest.net/user/lumbermandesigns

 */



if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly



/**

 * -----------------------------------------------------------------------------

 * Theme PHP scripts and libraries includes

 */



$theme_dir = get_template_directory();

$plugins_integration_dir = $theme_dir . '/inc/plugins-integration';



require_once ( ABSPATH . 'wp-admin/includes/plugin.php' );           // 1

require_once ( $theme_dir . '/design/functions-themedefaults.php'); // 2

require_once ( $theme_dir . '/inc/functions-extras.php' );         // 3



// Plugin integrations

require_once ( $plugins_integration_dir . '/class-tgmpa.php');        // 4

require_once ( $plugins_integration_dir . '/metaboxes.php' );        // 6

require_once ( $plugins_integration_dir . '/livecomposer.php' );    // 7

require_once ( $plugins_integration_dir . '/rotatingtweets.php' ); // 8

require_once ( $plugins_integration_dir . '/megamainmenu.php' );  // 9

require_once ( $plugins_integration_dir . '/masterslider.php' ); // 10



require_once ( $theme_dir . '/inc/customizer/headerpresets.class.php');      // 11

require_once ( $theme_dir . '/inc/customizer/customized-css.php');          // 12

require_once ( $theme_dir . '/inc/functions-themeinstall.php' );           // 13

require_once ( $theme_dir . '/inc/functions-ini.php' );                   // 14

require_once ( $theme_dir . '/all-icons-page.php');                      // 15

require_once ( $theme_dir . '/inc/customizer/customizer.php' );         // 16

require_once ( $theme_dir . '/inc/importer/widgets-importer.php' );    // 17

require_once ( $theme_dir . '/inc/functions-nopluginsinstalled.php' );// 18

require_once ( $theme_dir . '/inc/wp-updates-theme.php' );           // 19



/**

 *  1. Need this to have is_plugin_active()

 *  2. Import theme default settings ( make sure theme defaults are the first

 *     among other files to include !!! )

 *  3. Some extra functions that can be used by any of theme template files

 *

 *  4. TGMP class for plugin install and updates (modified http://goo.gl/frBZcL)

 *  5. ---

 *  6. Framework used to create custom meta boxes

 *  7. LiveComposer plugin integration

 *  8. Rotating Tweets plugin integration

 *  9. Mega Main Menu plugin integration

 *  10. Master Slider plugin integration

 *

 *  11. Header design presets class (used in Theme Customizer)

 *  12. Custom CSS generator (based on Theme Customizer options)

 *  13. On theme activation installation functions

 *  14. Functions called on theme initialization

 *  15. Creates admin page used by modal window with all custom icons listed

 *  16. All Theme Customizer magic

 *

 *  17. Widget Importer Functions (based on Widget_Importer_Exporter plugin)

 *  18. Functions to be used when not all required plugins installed

 *  19. WPUpdates Theme Updater Class for automatic theme updates

 */



/**

* ----------------------------------------------------------------------

* Setup some of the theme settings

*

* http://codex.wordpress.org/Plugin_API/Action_Reference

*

* Generally used to initialize theme settings/options.

* This is the first action hook available to themes,

* triggered immediately after the active theme's functions.php

* file is loaded. add_theme_support() should be called here,

* since the init action hook is too late to add some features.

* At this stage, the current user is not yet authenticated.

*/



add_action( 'after_setup_theme', 'lbmn_setup' ); // Bind theme setup callback



if ( ! function_exists( 'lbmn_setup' ) ) :



	/**

	 * Sets up theme defaults and registers support for various WordPress features.

	 *

	 * Note that this function is hooked into the after_setup_theme hook, which runs

	 * before the init hook. The init hook is too late for some features, such as indicating

	 * support post thumbnails.

	 */

	function lbmn_setup() {

		load_theme_textdomain( 'lbmn', get_template_directory() . '/languages' );

		// Make theme available for translation



		// add_theme_support( 'post-formats', array( 'aside', 'quote', 'link' ) );

		// Enable support for Post Formats



		add_theme_support( 'post-thumbnails' );

		// Enable support for Post Thumbnails on posts and pages



		add_theme_support( 'automatic-feed-links' );

		// Add default posts and comments RSS feed links to head



		// This theme uses wp_nav_menu()

		// Here we define menu locations available

		register_nav_menus( array(

			'topbar'	=> __( 'Top Bar', 'lbmn' ),

			'header-menu'	=> __( 'Header', 'lbmn' ),

			// Please note: Mobile off-canvas menu is widget area no menu locaiton

		) );

	}



endif; // lbmn_setup





/**

 * ------------------------------------------------------------------------------

 * Register the required plugins for this theme.

 *

 * This function is hooked into tgmpa_init, which is fired within the

 * TGM_Plugin_Activation class constructor.

 */



define( 'THEME_LC_VER', '1.0.5.2' );

// Latest compatible Live Composer version

// It overrides the LC dashboard updates feature to make sure LC do not

// update itself until we test and permit it



add_action( 'tgmpa_register', 'lbmn_register_required_plugins' );

function lbmn_register_required_plugins() {

	/**

	 * Array of plugin arrays. Required keys are name and slug.

	 * If the source is NOT from the .org repo, then source is also required.

	 */

	// there is a bug in tgmpa that prevents me from using 'default_path' in config

	$default_path = LBMN_INSTALLER . LBMN_PLUGINS;

	//get_template_directory_uri() . '/inc/plugins-integration/plugin-installables/';

	$plugins = array(



		// Include amazing 'Live Composer' plugin pre-packaged with a theme

		array(

			'name'     				=> 'Live Composer',

			'slug'     				=> 'ds-live-composer',

			'source'   				=> $default_path . 'ds-live-composer.1.0.5.2.zip',

			'required' 				=> true,

			'version' 				=> '1.0.5.2', // make sure to update THEME_LC_VER constant too

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/live-composer-frontend-wordpress-page-builder/6594028?ref=lumbermandesigns',

		),



		// Include 'Mega Main Menu' plugin pre-packaged with a theme

		array(

			'name'     				=> 'Mega Main Menu',

			'slug'     				=> 'mega_main_menu',

			'source'   				=> $default_path . 'mega_main_menu.2.0.2.zip',

			'required' 				=> true,

			'version' 				=> '2.0.2',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/mega-main-menu-wordpress-menu-plugin/6135125?ref=lumbermandesigns',

		),



		// Include 'Meta Box' plugin pre-packaged with a theme

		// http://wordpress.org/plugins/meta-box/

		array(

			'name'     				=> 'Meta Box',

			'slug'     				=> 'meta-box',

			'required' 				=> true,

			'version' 				=> '', //'4.3.8',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://wordpress.org/plugins/meta-box/',

		),



		// Include 'WPFW - Menus Management' plugin pre-packaged with a theme

		array(

			'name'     				=> 'WPFW - Menus Management',

			'slug'     				=> 'wpfw_menus_management',

			'source'   				=> $default_path . 'wpfw_menus_management.0.0.1.zip',

			'required' 				=> true,

			'version' 				=> '0.0.1',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/wordpress-menus-management/7814552?ref=lumbermandesigns',

		),



		// Include 'MasterSlider' plugin pre-packaged with a theme

		array(

			'name'     				=> 'MasterSlider',

			'slug'     				=> 'masterslider',

			'source'   				=> $default_path . 'masterslider.2.2.0.zip',

			'required' 				=> false,

			'version' 				=> '2.2.0',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/master-slider-wordpress-responsive-touch-slider/7467925?ref=lumbermandesigns',

		),



		// Include 'Easy Social Share Buttons for WordPress' plugin pre-packaged with a theme

		array(

			'name'     				=> 'Easy Social Share Buttons for WordPress',

			'slug'     				=> 'easy-social-share-buttons',

			'source'   				=> $default_path . 'easy-social-share-buttons.1.3.9.6.zip',

			'required' 				=> false,

			'version' 				=> '1.3.9.6',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/easy-social-share-buttons-for-wordpress/6394476?ref=lumbermandesigns',

		),



		// Include 'NEX-Forms' plugin pre-packaged with a theme

		// http://codecanyon.net/user/Basix/portfolio

		array(

			'name'     				=> 'NEX-Forms',

			'slug'     				=> 'Nex-Forms/main.php',

			'source'   				=> $default_path . 'nex-forms.1.1.zip',

			'required' 				=> false,

			'version' 				=> '1.1',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/nexforms-the-ultimate-wordpress-form-builder/7103891?ref=lumbermandesigns',

		),



		// Include 'Simplified Google Maps' plugin pre-packaged with a theme

		// http://cetabo.com

		array(

			'name'     				=> 'Simplified Google Maps', // Cetabo_GoogleMaps

			'slug'     				=> 'cetabo-googlemaps',

			'source'   				=> $default_path . 'cetabo-googlemaps.1.2.zip',

			'required' 				=> false,

			'version' 				=> '1.2',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/simplified-google-maps/5674572?ref=lumbermandesigns',

		),



		// Include 'Rotating Tweets' plugin pre-packaged with a theme

		// http://wordpress.org/plugins/rotatingtweets/

		array(

			'name'     				=> 'Rotating Tweets (Twitter widget and shortcode)',

			'slug'     				=> 'rotatingtweets',

			'required' 				=> false,

			'version' 				=> '', //'4.3.8',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://wordpress.org/plugins/rotatingtweets/',

		),



		// Include 'Newsletter Sign-Up' plugin pre-packaged with a theme

		// http://wordpress.org/plugins/rotatingtweets/

		array(

			'name'     				=> 'Newsletter Sign-Up',

			'slug'     				=> 'newsletter-sign-up',

			'required' 				=> false,

			'version' 				=> '', //'4.3.8',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://wordpress.org/plugins/newsletter-sign-up/',

		),



		// Include 'Fresh Favicon' premium plugin pre-packaged with a theme

		// http://codecanyon.net/item/fresh-favicon/8111680

		array(

			'name'     				=> 'Fresh Favicon',

			'slug'     				=> 'fresh-favicon',

			'source'   				=> $default_path . 'fresh-favicon.1.1.1.zip',

			'required' 				=> false,

			'version' 				=> '1.1.1',

			'force_activation' 	=> false,

			'force_deactivation' => false,

			'external_url' 		=> 'http://codecanyon.net/item/fresh-favicon/8111680',

		),

	);



	/**

	 * Array of configuration settings.

	 */

	$config = array(

		'domain'       		=> 'lbmn',         	// Text domain - likely want to be the same as your theme.

		'default_path' 		=> '', // Default absolute path to pre-packaged plugins

		'parent_menu_slug' 	=> 'themes.php', 				// Default parent menu slug

		'parent_url_slug' 	=> 'themes.php', 				// Default parent URL slug

		'menu'         		=> 'install-required-plugins', 	// Menu slug

		'has_notices'      	=> true,                       	// Show admin notices or not

		'is_automatic'    	=> true,					   	// Automatically activate plugins after installation or not

		'message' 			=> '',							// Message to output right before the plugins table

		'strings'      		=> array(

			'page_title'                       			=> __( 'Install Required Plugins', 'lbmn' ),

			'menu_title'                       			=> __( 'Install Plugins', 'lbmn' ),

			'installing'                       			=> __( 'Installing Plugin: %s', 'lbmn' ), // %1$s = plugin name

			'oops'                             			=> __( 'Something went wrong with the plugin API.', 'lbmn' ),

			'notice_can_install_required'     			=> _n_noop( 'This theme requires the following plugin (included): %1$s.', 'This theme requires the following plugins (included): %1$s.' ), // %1$s = plugin name(s)

			'notice_can_install_recommended'			=> _n_noop( 'This theme recommends the following plugin (included): %1$s.', 'This theme recommends the following plugins (included): %1$s.' ), // %1$s = plugin name(s)

			'notice_cannot_install'  					=> _n_noop( 'Sorry, but you do not have the correct permissions to install the %s plugin. Contact the administrator of this site for help on getting the plugin installed.', 'Sorry, but you do not have the correct permissions to install the %s plugins. Contact the administrator of this site for help on getting the plugins installed.' ), // %1$s = plugin name(s)

			'notice_can_activate_required'    			=> _n_noop( 'The following required plugin is currently inactive: %1$s.', 'The following required plugins are currently inactive: %1$s.' ), // %1$s = plugin name(s)

			'notice_can_activate_recommended'			=> _n_noop( 'The following recommended plugin is currently inactive: %1$s.', 'The following recommended plugins are currently inactive: %1$s.' ), // %1$s = plugin name(s)

			'notice_cannot_activate' 					=> _n_noop( 'Sorry, but you do not have the correct permissions to activate the %s plugin. Contact the administrator of this site for help on getting the plugin activated.', 'Sorry, but you do not have the correct permissions to activate the %s plugins. Contact the administrator of this site for help on getting the plugins activated.' ), // %1$s = plugin name(s)

			'notice_ask_to_update' 						=> _n_noop( 'The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: %1$s.', 'The following plugins need to be updated to their latest version to ensure maximum compatibility with this theme: %1$s.' ), // %1$s = plugin name(s)

			'notice_cannot_update' 						=> _n_noop( 'Sorry, but you do not have the correct permissions to update the %s plugin. Contact the administrator of this site for help on getting the plugin updated.', 'Sorry, but you do not have the correct permissions to update the %s plugins. Contact the administrator of this site for help on getting the plugins updated.' ), // %1$s = plugin name(s)

			'install_link' 					  			=> _n_noop( 'Begin installing plugin', 'Begin installing plugins' ),

			'activate_link' 				  			=> _n_noop( 'Activate installed plugin', 'Activate installed plugins' ),

			'return'                           			=> __( 'Return to Required Plugins Installer', 'lbmn' ),

			'plugin_activated'                 			=> __( 'Plugin activated successfully.', 'lbmn' ),

			'complete' 									=> __( 'All plugins installed and activated successfully. %s', 'lbmn' ), // %1$s = dashboard link

			'nag_type'									=> 'updated' // Determines admin notice type - can only be 'updated' or 'error'

		)

	);



	tgmpa( $plugins, $config );

}



/**

 * ----------------------------------------------------------------------

 * WPUpdates Theme Updater Class Initialization

 * Automatic theme updates

 */

new WPUpdatesThemeUpdater_880( 'http://wp-updates.com/api/2/theme', basename(get_template_directory()) );



/**

 * ----------------------------------------------------------------------

 * Save updating versions history

 */





add_action( 'current_screen', 'lbmn_theme_version_control' );

function lbmn_theme_version_control( $current_screen ) {

	if ( 'themes' == $current_screen->base ) {

		// Proceed only if 'themes' admin screen loaded

		$lbmn_theme = wp_get_theme();

		$curent_theme_ver = $lbmn_theme->get( 'Version' );

		$theme_ver_log = get_option( 'lbmn_theme_updates_log');



		if ( ! $theme_ver_log ) {

			$theme_ver_log = array();

		}



		// This code marks the very first theme installation

		// when no theme version control were available

		if ( get_option( LBMN_THEME_NAME . '_basic_setup_done') && ! in_array('1.0.1', $theme_ver_log) ) {

			array_unshift($theme_ver_log, '1.0.1');

			update_option( 'lbmn_theme_updates_log', $theme_ver_log);

		}



		if ( get_option( LBMN_THEME_NAME . '_basic_setup_done') ) {

			update_option( LBMN_THEME_NAME . '_basic_config_done', true);

		}



		if ( ! in_array($curent_theme_ver, $theme_ver_log) ) {

			array_unshift($theme_ver_log, $curent_theme_ver);

			update_option( 'lbmn_theme_updates_log', $theme_ver_log);

		}



		if ( get_option( LBMN_THEME_NAME . '_basic_config_done') ) {

			define ('LBMN_THEME_CONFUGRATED', true);

		}

	}

}

/*

delete_option( LBMN_THEME_NAME . '_basic_setup_done');

delete_option( 'lbmn_theme_updates_log' );

*/

/**

 * ----------------------------------------------------------------------

 * Output theme debug information in HTML including template file name.

 * Must be 'false' if you finished website development.

 */



define('LBMN_THEME_DEBUG', false);



/**

 * ----------------------------------------------------------------------

 * Alternative to define( 'SCRIPT_DEBUG', true ) in wp-config.php

 */



define('LBMN_SCRIPT_DEBUG', false);



// true – original theme JavaScripts outputted

// false - minimized theme JavaScripts outputted



/**

* ----------------------------------------------------------------------

* Theme debuging helpers

*/



function lbmn_debug($var) {

	echo '<!-- debug start --><pre>';

	print_r($var);

	echo '</pre> <!-- debug end -->';

}



/**

 * Send debug code to the Javascript console

 */

function lbmn_debug_console($data) {

    if(is_array($data) || is_object($data))

	{

		echo("<script>console.info('PHP: ".json_encode($data)."');</script>");

	} else {

		echo("<script>console.info('PHP: ".$data."');</script>");

	}

}

		register_nav_menus(                      
			array( 
				'free_quote_menu' => 'Free Quote Menu',   
			)
		);
		
		register_sidebar(array(
    	'id' => 'free-quoto',
    	'name' => 'Free Quoto Menu',
    	'description' => '',
    	'before_widget' => '<div class="free-quoto">',
    	'after_widget' => '</div>',
    	'before_title' => '<p>',
    	'after_title' => '</p>',
    ));
	
	
	
function scripts(){
	if(!is_admin()){
	//wp_enqueue_script( 'map-api', 'http://maps.google.com/maps/api/js?sensor=false');
	
	
	if(is_page_template('page-contact-form.php')){

    wp_register_style( 'jquery-ui_custom', get_template_directory_uri() . '/jquery-ui-1.8.2.custom.css', array(), '1.0', 'all' );
   //wp_enqueue_style( 'jquery-ui_custom' );
	
	

	wp_register_script(  'jquery-ui-1.8.5.custom.min', 
	get_template_directory_uri() . '/js/jquery-ui-1.8.5.custom.min.js', 
	array('jquery'), 
	'1.2', true);
		wp_enqueue_script('jquery-ui-1.8.5.custom.min');


	
	
	wp_register_script(  'jquery_form', 
	get_template_directory_uri() . '/js/jquery.form.js', 
	array('jquery'), 
	'1.2', true);
		//wp_enqueue_script('jquery_form');

	wp_register_script(  'jquery_validate', 
	get_template_directory_uri() . '/js/jquery.validate.js', 
	array('jquery'), 
	'1.2', true);
		wp_enqueue_script('jquery_validate');

	wp_register_script(  'bbq', 
	get_template_directory_uri() . '/js/bbq.js', 
	array('jquery'), 
	'1.2', true);
		//wp_enqueue_script('bbq');
	
	wp_register_script(  'jquery_form_wizard', 
	get_template_directory_uri() . '/js/jquery.form.wizard.js', 
	array('jquery'), 
	'1.2', true);
		wp_enqueue_script('jquery_form_wizard');
	
	
	
	//jquery ui
	wp_enqueue_script('jquery-ui-core');
		}
	}
	}
add_action( 'wp_enqueue_scripts', 'scripts' );




function form_2( $atts){
	$output =  '';
	$output .=  '
	<form id="demoForm" method="post" action="https://secure.velocify.com/Import.aspx?Provider=LockInsuranceWeb&Client=LockInsurance&CampaignId=XX&URL='.CFS()->get('thank_you_page').'" class="bbq">
				<div id="fieldWrapper">
				<div class="step" id="first">';
					$output .=  CFS()->get('first_section_massage');
				
					$output .=  '<label for="fname">Nombre</label><br />
					<input class="input_field_12em required" name="fname" id="fname" /><br />
					<label for="lname">Apellido</label><br />
					<input class="input_field_12em required" name="lname" id="lname" /><br />
					
					<label for="email">Correo Electrónico</label><br />
					<input class="input_field_12em required" name="email" id="email" /><br />
					
					<label for="staddress">Dirección</label><br />
					<input class="input_field_12em required" name="staddress" id="staddress" /><br />
					
					<label for="city">Ciudad</label><br />
					<input class="input_field_12em required" name="city" id="city" /><br />
					
					<label for="state">Estado</label><br />
					<select class="input_field_12em required" id="state"  name="state"><option value="">---</option><option value="Alabama">Alabama</option><option value="Alaska">Alaska</option><option value="American Samoa">American Samoa</option><option value="Arizona">Arizona</option><option value="Arkansas">Arkansas</option><option value="California">California</option><option value="Colorado">Colorado</option><option value="Connecticut">Connecticut</option><option value="Delaware">Delaware</option><option value="District of Columbia">District of Columbia</option><option value="Florida">Florida</option><option value="Georgia">Georgia</option><option value="Guam">Guam</option><option value="Hawaii">Hawaii</option><option value="Idaho">Idaho</option><option value="Illinois">Illinois</option><option value="Indiana">Indiana</option><option value="Iowa">Iowa</option><option value="Kansas">Kansas</option><option value="Kentucky">Kentucky</option><option value="Louisiana">Louisiana</option><option value="Maine">Maine</option><option value="Maryland">Maryland</option><option value="Massachusetts">Massachusetts</option><option value="Michigan">Michigan</option><option value="Minnesota">Minnesota</option><option value="Mississippi">Mississippi</option><option value="Missouri">Missouri</option><option value="Montana">Montana</option><option value="Nebraska">Nebraska</option><option value="Nevada">Nevada</option><option value="New Hampshire">New Hampshire</option><option value="New Jersey">New Jersey</option><option value="New Mexico">New Mexico</option><option value="New York">New York</option><option value="North Carolina">North Carolina</option><option value="North Dakota">North Dakota</option><option value="Northern Marianas Islands">Northern Marianas Islands</option><option value="Ohio">Ohio</option><option value="Oklahoma">Oklahoma</option><option value="Oregon">Oregon</option><option value="Pennsylvania">Pennsylvania</option><option value="Puerto Rico">Puerto Rico</option><option value="Rhode Island">Rhode Island</option><option value="South Carolina">South Carolina</option><option value="South Dakota">South Dakota</option><option value="Tennessee">Tennessee</option><option value="Texas">Texas</option><option value="Utah">Utah</option><option value="Vermont">Vermont</option><option value="Virginia">Virginia</option><option value="Virgin Islands">Virgin Islands</option><option value="Washington">Washington</option><option value="West Virginia">West Virginia</option><option value="Wisconsin">Wisconsin</option><option value="Wyoming">Wyoming</option></select><br />
					
					<label for="Zip">Código Postal</label><br />
					<input class="input_field_12em required" name="Zip" id="Zip" /><br />
					
					<label for="phone">Número Telefónico</label><br />
					<input class="input_field_12em required" name="phone" id="phone" /><br />


					<label for="phone">Tipo de Seguro</label><br />
					<select class="input_field_12em required" id="state"  name="state"><option value="">---</option><option value="Seguros de Auto">Seguros de Auto</option><option value="Seguros de Casa">Seguros de Casa</option><option value="Seguros de Negocios">Seguros de Negocios</option></select><br />' . "\n";



				$output .=  '<div id="demoNavigation"> 							
					<input class="navigation_button" id="back" value="Back" type="reset" />
					<input class="navigation_button" id="next" value="Next" type="submit" />
				</div>
			</form>	';
			
			
			
    $output .= '<script type="text/javascript">
			jQuery(function($){
				$("#demoForm").formwizard({ 
				 	formPluginEnabled: true,
				 	validationEnabled: true,
				 	focusFirstInput : true,
				 	formOptions :{
						success: function(data){$("#status").fadeTo(500,1,function(){ $(this).html("You are now registered!").fadeTo(5000, 0); })},
						beforeSubmit: function(data){$("#data").html("data sent to the server: " + $.param(data));},
						dataType: "json",
						resetForm: true
				 	}	
				 }
				);
  		});
    </script>
	
    <style type="text/css">
			#demoWrapper {
				padding : 1em;
				width : 500px;
				border-style: solid;
			}

			#fieldWrapper {
			}

			#demoNavigation {
				margin-top : 0.5em;
				margin-right : 1em;
				text-align: right;
			}
			
			#data {
				font-size : 0.7em;
			}

			input {
				margin-right: 0.1em;
				margin-bottom: 0.5em;
			}

			.input_field_25em {
				width: 2.5em;
			}

			.input_field_3em {
				width: 3em;
			}

			.input_field_35em {
				width: 3.5em;
			}

			.input_field_12em {
				width: 12em;
			}

			label {
				margin-bottom: 0.2em;
				font-weight: bold;
				font-size: 0.8em;
			}

			label.error {
				color: red;
				font-size: 0.8em;
				margin-left : 0.5em;
			}

			.step span {
				float: right;
				font-weight: bold;
				padding-right: 0.8em;
			}

			.navigation_button {
				width : 70px;
			}
			
			#data {
					overflow : auto;
			}
		</style>
	
	
	
	';


	
	return $output;
	
	}
add_shortcode( 'form_spanish', 'form_2' );





function form( $atts){
	$output =  '';
	$output .=  '
	<form id="demoForm" method="post" action="https://secure.velocify.com/Import.aspx?Provider=LockInsuranceWeb&Client=LockInsurance&CampaignId=XX&URL='.CFS()->get('thank_you_page').'" class="bbq">
				<div id="fieldWrapper">
				<div class="step" id="first">';
					$output .=  CFS()->get('first_section_massage');
				
					$output .=  '<label for="fname">First name</label><br />
					<input class="input_field_12em required" name="fname" id="fname" /><br />
					<label for="lname">Last Name</label><br />
					<input class="input_field_12em required" name="lname" id="lname" /><br />
					
					<label for="email">Email Address</label><br />
					<input class="input_field_12em required" name="email" id="email" /><br />
					
					<label for="staddress">Street Address</label><br />
					<input class="input_field_12em required" name="staddress" id="staddress" /><br />
					
					<label for="city">City</label><br />
					<input class="input_field_12em required" name="city" id="city" /><br />
					
					<label for="state">State</label><br />
					<select class="input_field_12em required" id="state"  name="state"><option value="">---</option><option value="Alabama">Alabama</option><option value="Alaska">Alaska</option><option value="American Samoa">American Samoa</option><option value="Arizona">Arizona</option><option value="Arkansas">Arkansas</option><option value="California">California</option><option value="Colorado">Colorado</option><option value="Connecticut">Connecticut</option><option value="Delaware">Delaware</option><option value="District of Columbia">District of Columbia</option><option value="Florida">Florida</option><option value="Georgia">Georgia</option><option value="Guam">Guam</option><option value="Hawaii">Hawaii</option><option value="Idaho">Idaho</option><option value="Illinois">Illinois</option><option value="Indiana">Indiana</option><option value="Iowa">Iowa</option><option value="Kansas">Kansas</option><option value="Kentucky">Kentucky</option><option value="Louisiana">Louisiana</option><option value="Maine">Maine</option><option value="Maryland">Maryland</option><option value="Massachusetts">Massachusetts</option><option value="Michigan">Michigan</option><option value="Minnesota">Minnesota</option><option value="Mississippi">Mississippi</option><option value="Missouri">Missouri</option><option value="Montana">Montana</option><option value="Nebraska">Nebraska</option><option value="Nevada">Nevada</option><option value="New Hampshire">New Hampshire</option><option value="New Jersey">New Jersey</option><option value="New Mexico">New Mexico</option><option value="New York">New York</option><option value="North Carolina">North Carolina</option><option value="North Dakota">North Dakota</option><option value="Northern Marianas Islands">Northern Marianas Islands</option><option value="Ohio">Ohio</option><option value="Oklahoma">Oklahoma</option><option value="Oregon">Oregon</option><option value="Pennsylvania">Pennsylvania</option><option value="Puerto Rico">Puerto Rico</option><option value="Rhode Island">Rhode Island</option><option value="South Carolina">South Carolina</option><option value="South Dakota">South Dakota</option><option value="Tennessee">Tennessee</option><option value="Texas">Texas</option><option value="Utah">Utah</option><option value="Vermont">Vermont</option><option value="Virginia">Virginia</option><option value="Virgin Islands">Virgin Islands</option><option value="Washington">Washington</option><option value="West Virginia">West Virginia</option><option value="Wisconsin">Wisconsin</option><option value="Wyoming">Wyoming</option></select><br />
					
					<label for="Zip">Zip</label><br />
					<input class="input_field_12em required" name="Zip" id="Zip" /><br />
					
					<label for="phone">Phone</label><br />
					<input class="input_field_12em required" name="phone" id="phone" /><br />
					
					
					
					
					
					
				</div>' . "\n";
				$fields =CFS()->get('add_a_field');
				if($fields){
				$output .= '<div id="finland" class="step submit_step">';
				$output .=  CFS()->get('second_section_massage');
				
				//printf($fields);
				foreach ($fields as $field):
				$selects = $field['field_type'];
				$select_value = '';
				foreach ($selects as $select){ $select_value .= $select;};
				$output .= check_all_fields($field['field_name'], $field['field_variable'], $select_value, $field['required'], '', $field['value']) . "\n";
				//$output .= $field['field_name'] . "\n";
				endforeach;


				$output .= '</div>' . "\n";
				}
				$output ='</div>
				<div id="demoNavigation"> 							
					<input class="navigation_button" id="back" value="Back" type="reset" />
					<input class="navigation_button" id="next" value="Next" type="submit" />
				</div>
			</form>	';
			
			
			
    $output .= '<script type="text/javascript">
			jQuery(function($){
				$("#demoForm").formwizard({ 
				 	formPluginEnabled: true,
				 	validationEnabled: true,
				 	focusFirstInput : true,
				 	formOptions :{
						success: function(data){$("#status").fadeTo(500,1,function(){ $(this).html("You are now registered!").fadeTo(5000, 0); })},
						beforeSubmit: function(data){$("#data").html("data sent to the server: " + $.param(data));},
						dataType: "json",
						resetForm: true
				 	}	
				 }
				);
  		});
    </script>
	
    <style type="text/css">
			#demoWrapper {
				padding : 1em;
				width : 500px;
				border-style: solid;
			}

			#fieldWrapper {
			}

			#demoNavigation {
				margin-top : 0.5em;
				margin-right : 1em;
				text-align: right;
			}
			
			#data {
				font-size : 0.7em;
			}

			input {
				margin-right: 0.1em;
				margin-bottom: 0.5em;
			}

			.input_field_25em {
				width: 2.5em;
			}

			.input_field_3em {
				width: 3em;
			}

			.input_field_35em {
				width: 3.5em;
			}

			.input_field_12em {
				width: 12em;
			}

			label {
				margin-bottom: 0.2em;
				font-weight: bold;
				font-size: 0.8em;
			}

			label.error {
				color: red;
				font-size: 0.8em;
				margin-left : 0.5em;
			}

			.step span {
				float: right;
				font-weight: bold;
				padding-right: 0.8em;
			}

			.navigation_button {
				width : 70px;
			}
			
			#data {
					overflow : auto;
			}
		</style>
	
	
	
	';


	
	return $output;
	
	}
add_shortcode( 'form_s', 'form' );



///cCheck form field
function check_all_fields($title, $variable, $select_form_field, $required = NULL, $class = NULL, $multistep = NULL){
				
				$output = '';
			if($select_form_field == 'text'){
				$required = required($required);
				$output .= '<label for="'.$variable.'">'.$title.'</label>' . "\n <br />";
				$output .= '<input type="text" class="'.$required.'" name="'.$variable.'" id="'.$variable.'" />' . "\n";
			}elseif($select_form_field == 'textarea'){
				$required = required($required);
				$output .= '<label for="'.$variable.'">'.$title.'</label>' . "\n <br>";
				$output .= '<textarea class="'.$class.' ' . $required .'" name="'.$variable.'"  id="'.$variable.'" /></textarea>' . "\n";
			}elseif($select_form_field == 'select'){
				$required = required($required);
				$output .= '<label for="'.$variable.'">'.$title.'</label>' . "\n <br>";
				$output .= '<select name="'.$variable.'"  class="'.$class. ' ' . $required . '"  id="'.$variable.'" >' . "\n";
				$output .= multiplefield($multistep);

				$output .= '</select>' . "\n";
				
			}elseif($select_form_field == 'check'){
				$output .= '<label for="'.$variable.'">'.$title.'</label>' . "\n <br>";
				$check = required($required, $title, 'check');
				$output .= checkbox($multistep, $title, $variable, $check);				


			}elseif($select_form_field == 'radio'){
				$output .= '<label for="'.$variable.'">'.$title.'</label>' . "\n <br>";
				$red = required($required, $title, 'check');
				$output .= radio($multistep, $title, $variable, $red);				
			}
				$output .= '<br />';
			
		return 	$output;
}



//// required function
function required($requireds, $title, $type){
				$required_value = '';
				foreach ($requireds as $required){
				$required_value .=  $required;
				}
				//$required = ($required_value == 'yes')? ' required': '';
				if($required_value=='yes'){
					$required = 'required';
					}
				return $required;
}

/// select field
function multiplefield($value){
			$explodeds = explode( '|', $value );
					$output = '' . "\n";
			foreach ($explodeds as $exploded){
					$output .= '<option>'.$exploded.'</option>' . "\n";
				}
				
				return $output;
			
		}
		
		
function radio($text, $title, $variable, $required){
			$explodeds = explode( '|', $text );
					$output = '' . "\n";
			foreach ($explodeds as $exploded){
					$output .= '<div><input class="del_min_sim '.$required.'" type="radio"  name="'.$variable.'" value="'.$exploded.'"> '.$exploded.'</div> ' . "\n";
				}
				return $output;			
				
}


function checkbox($text, $title, $variable, $required){
			$explodeds = explode( '|', $text );
					$output = '' . "\n";
			foreach ($explodeds as $exploded){
					$output .= '<div><input class="del_min_sim '.$required.'" type="checkbox" name="'.$variable.'" value="'.$exploded.'" '.$required.'> '.$exploded.'</div> ' . "\n";
				}
				
				return $output;			
		}	



//Sidebar register 
    register_sidebar(array(
    	'id' => 'sidebar-contact',
    	'name' => 'Contact Form Template Sidebar',
    	'description' => '',
    	'before_widget' => '<div class="dslc-widget-wrap">',
    	'after_widget' => '</div>',
    	'before_title' => '<h3 class="dslc-widget-title" style="margin-top: 20px;">',
    	'after_title' => '</h3>',
    ));
    
